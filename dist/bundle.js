/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ (() => {

eval("function _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\ndocument.getElementById(\"G_R\").style.display = \"none\";\ndocument.getElementById(\"G_Rc\").style.display = \"none\";\ndocument.getElementById(\"erase\").style.display = \"none\";\ndocument.getElementById(\"erasec\").style.display = \"none\";\ndocument.getElementById(\"downloadButton\").style.display = \"none\";\ndocument.getElementById(\"downloadButtonc\").style.display = \"none\";\nvar excel_file = document.getElementById('excel_file');\nexcel_file.addEventListener('change', function (event) {\n  if (!['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel'].includes(event.target.files[0].type)) {\n    document.getElementById('excel_data').innerHTML = '<div class=\"alert alert-danger\">Only .xlsx or .xls file format are allowed</div>';\n    excel_file.value = '';\n    return false;\n  }\n  var reader = new FileReader();\n  reader.readAsArrayBuffer(event.target.files[0]);\n  reader.onload = function (event) {\n    var data = new Uint8Array(reader.result);\n    var work_book = XLSX.read(data, {\n      type: 'array'\n    });\n    var sheet_name = work_book.SheetNames;\n    var sheet_data = XLSX.utils.sheet_to_json(work_book.Sheets[sheet_name[0]], {\n      header: 1\n    });\n    if (sheet_data.length > 0) {\n      var table_output = '<table class=\"table table-striped table-bordered\" id=\"myTable\" style=\"padding: 30px\">';\n      table_output += '<tr style=\"text-align: center\"><th>Serial No.</th>';\n      for (var cell = 0; cell < sheet_data[0].length; cell++) {\n        table_output += '<th style=\"text-align: center\">' + sheet_data[0][cell] + '</th>';\n      }\n      table_output += '</tr>';\n      for (var row = 1; row < sheet_data.length; row++) {\n        table_output += '<tr style=\"text-align: center\"><td>' + row + '</td>';\n        for (var cell = 0; cell < sheet_data[row].length; cell++) {\n          table_output += '<td>' + sheet_data[row][cell] + '</td>';\n        }\n        table_output += '</tr>';\n      }\n      table_output += '</table>';\n      document.getElementById('excel_data').innerHTML = table_output;\n    }\n    excel_file.value = '';\n    addColumns();\n  };\n  document.getElementById(\"G_R\").style.display = \"block\";\n  document.getElementById(\"G_Rc\").style.display = \"inline\";\n  document.getElementById(\"erase\").style.display = \"block\";\n  document.getElementById(\"erasec\").style.display = \"inline\";\n  document.getElementById(\"downloadButton\").style.display = \"block\";\n  document.getElementById(\"downloadButtonc\").style.display = \"inline\";\n});\nfunction addColumns() {\n  var table = document.getElementById(\"myTable\");\n  var rowCount = table.rows.length;\n  var colCount = table.rows[0].cells.length;\n  for (var n = 0; n < 10; n++) {\n    for (var i = 0; i < rowCount; i++) {\n      var newCell = table.rows[i].insertCell(colCount + n);\n    }\n  }\n  var rowIndex = 0;\n  var colIndex_ppw = 6;\n  var colIndex_weight = 7;\n  var colIndex_ex = 8;\n  var colIndex_exw = 9;\n  var colIndex_to = 10;\n  var colIndex_tow = 11;\n  var colIndex_rem = 12;\n  var colIndex_mi = 13;\n  var colIndex_ma = 14;\n  var colIndex_co = 15;\n  table.rows[rowIndex].cells[colIndex_ma].innerHTML = \"<b>MAX.</b>\";\n  table.rows[rowIndex].cells[colIndex_mi].innerHTML = \"<b>MIN.</b>\";\n  table.rows[rowIndex].cells[colIndex_co].innerHTML = \"<b>COMBO.</b>\";\n  table.rows[rowIndex].cells[colIndex_ex].innerHTML = \"<b>EXTRA NOP</b>\";\n  table.rows[rowIndex].cells[colIndex_ppw].innerHTML = \"<b>PPW (MT)</b>\";\n  table.rows[rowIndex].cells[colIndex_weight].innerHTML = \"<b>TOTAL WEIGHT (MT)</b>\";\n  table.rows[rowIndex].cells[colIndex_exw].innerHTML = \"<b>EXTRA WEIGHT (MT)</b>\";\n  table.rows[rowIndex].cells[colIndex_to].innerHTML = \"<b>SUGGESTED NOP</b>\";\n  table.rows[rowIndex].cells[colIndex_tow].innerHTML = \"<b>SUGGESTED WEIGHT (MT)</b>\";\n  table.rows[rowIndex].cells[colIndex_rem].innerHTML = \"<b>REMARKS </b>\";\n}\nfunction gres() {\n  var table = document.getElementById(\"myTable\");\n  var rowCount = table.rows.length;\n  var i = 1;\n  while (i < rowCount) {\n    var row = table.rows[i];\n    var thick_val = Number(row.cells[2].textContent);\n    var width_val = Number(row.cells[3].textContent);\n    var realwidthvalue = Number(row.cells[3].textContent);\n    var p = width_val;\n    var length_val = Number(row.cells[4].textContent);\n    var y = 0;\n    var NOP_val = Number(row.cells[5].textContent);\n    var s = [];\n    var ppw = (thick_val * width_val * length_val * 7.85 * Math.pow(10, -9)).toFixed(3);\n    var ppw_space = row.cells[6];\n    var wgt_space = row.cells[7];\n    var extra_space = row.cells[8];\n    var extraw_space = row.cells[9];\n    var total_space = row.cells[10];\n    var totalw_space = row.cells[11];\n    var rem_space = row.cells[12];\n    var min_space = row.cells[13];\n    var max_space = row.cells[14];\n    var combo_space = row.cells[15];\n    ppw_space.innerHTML = ppw;\n    if (thick_val > 150) {\n      wgt_space.innerHTML = \"0\";\n      extra_space.innerHTML = \"0\";\n      extraw_space.innerHTML = \"0\";\n      totalw_space.innerHTML = \"0\";\n      total_space.innerHTML = \"0\";\n      min_space.innerHTML = \"0\";\n      max_space.innerHTML = \"0\";\n      rem_space.innerHTML = \"<span style='color:red;font-weight:bold;'>Not Possible</span>\";\n      combo_space.innerHTML = \"0\";\n      i++;\n      continue;\n    }\n    wgt_space.innerHTML = (ppw * NOP_val).toFixed(3);\n    if (width_val < 1800) {\n      width_val = width_val * 2;\n      s.push(\"o\");\n      p = width_val;\n    }\n    if (width_val > 1200 && width_val < 2550) {\n      width_val = width_val + 100;\n    } else if (width_val > 2551 && width_val < 2700) {\n      width_val = width_val + 110;\n    } else if (width_val > 2701 && width_val < 3100) {\n      width_val = width_val + 120;\n    } else if (width_val > 3101 && width_val < 3500) {\n      width_val = width_val + 150;\n    } else if (width_val > 3501 && width_val < 3900) {\n      width_val = width_val + 180;\n    } else if (width_val > 3901 && width_val < 4200) {\n      width_val = width_val + 200;\n    }\n    var max = 0;\n    max = Math.floor(38000 / length_val);\n    if (thick_val >= 5 && thick_val <= 12) {\n      if (p > 2600 && length_val * max > 28000) {\n        while (length_val * max > 28000) {\n          max--;\n        }\n      }\n      y = length_val * max + 1400;\n    } else if (thick_val > 12 && thick_val <= 13.9) {\n      y = length_val * max + 1400;\n    } else if (thick_val >= 14 && thick_val <= 39.9) {\n      y = length_val * max + 800;\n    } else if (thick_val >= 40 && thick_val <= 99.9) {\n      y = length_val * max + 400;\n    } else if (thick_val >= 100 && thick_val <= 250) {\n      y = length_val * max + 200;\n    }\n    var tot = thick_val * width_val * y * 7.85 * Math.pow(10, -9) * 1.01;\n    if (tot > 19.2) {\n      while (tot > 19.2) {\n        max--;\n        if (thick_val >= 5 && thick_val <= 13.9) {\n          y = length_val * max + 1400;\n        } else if (thick_val >= 14 && thick_val <= 39.9) {\n          y = length_val * max + 800;\n        } else if (thick_val >= 40 && thick_val <= 99.9) {\n          y = length_val * max + 400;\n        } else if (thick_val >= 100 && thick_val <= 250) {\n          y = length_val * max + 200;\n        }\n        tot = thick_val * width_val * y * 7.85 * Math.pow(10, -9) * 1.01;\n      }\n    }\n    //ppw calculation\n    var min = max;\n    while (tot > 6.9) {\n      min--;\n      if (thick_val >= 5 && thick_val <= 13.9) {\n        y = length_val * min + 1400;\n      } else if (thick_val >= 14 && thick_val <= 39.9) {\n        y = length_val * min + 800;\n      } else if (thick_val >= 40 && thick_val <= 99.9) {\n        y = length_val * min + 400;\n      } else if (thick_val >= 100 && thick_val <= 250) {\n        y = length_val * min + 200;\n      }\n      tot = thick_val * width_val * y * 7.85 * Math.pow(10, -9) * 1.01;\n      if (tot - 6.9 < 0) {\n        min++;\n      }\n    }\n    if (s.length != 0) {\n      min = 2 * min;\n      max = 2 * max;\n    }\n    max_space.innerHTML = max;\n    min_space.innerHTML = min;\n    var min_2 = 0;\n    var NOP_val_2 = 0;\n    var a = [];\n    var m = [];\n    var c = [];\n    while (min_2 < NOP_val) {\n      a.push(min);\n      min_2 += min;\n    }\n    while (a[0] <= max) {\n      var _iterator = _createForOfIteratorHelper(a),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          NOP_val_2 += item;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (a[a.length - 1] > max) {\n        a.pop();\n        a[a.length - 1]++;\n      } else if (NOP_val_2 == NOP_val) {\n        combo_space.innerHTML = a;\n        a.pop();\n        a[a.length - 1]++;\n        c.push(\"L\");\n      } else if (NOP_val_2 < NOP_val) {\n        a.push(a[a.length - 1]);\n      } else if (NOP_val_2 > NOP_val) {\n        a.pop();\n        a[a.length - 1]++;\n        var _dif = NOP_val_2 - NOP_val;\n        m.push(_dif);\n      }\n      NOP_val_2 = 0;\n      dif = 0;\n    }\n    var exult = Math.min.apply(Math, m);\n    if (c.length == 0) {\n      extraw_space.innerHTML = (exult * ppw).toFixed(3);\n      extra_space.innerHTML = exult;\n      total_space.innerHTML = exult + NOP_val;\n      totalw_space.innerHTML = ((exult + NOP_val) * ppw).toFixed(3);\n      rem_space.innerHTML = \"Extra Required\";\n      a = [];\n      var NOP_val_3 = Number(exult + NOP_val);\n      min_2 = 0;\n      while (min_2 < NOP_val_3) {\n        a.push(min);\n        min_2 += min;\n      }\n      combo_space.innerHTML = a;\n    }\n    if (c.length != 0) {\n      extra_space.innerHTML = \"0\";\n      total_space.innerHTML = NOP_val;\n      extraw_space.innerHTML = \"0\";\n      totalw_space.innerHTML = (NOP_val * ppw).toFixed(3);\n    }\n    if (s.length != 0 && c.length != 0) {\n      rem_space.innerHTML = \"<span style='font-weight: bold;'>OK with Slit</span>\";\n    }\n    if (s.length != 0 && c.length == 0) {\n      rem_space.innerHTML = \"<span style='font-weight: bold;'>Ext. with Slit</span>\";\n    } else if (s.length == 0 && c.length != 0) {\n      rem_space.innerHTML = \"OK\";\n    }\n    if (ppw >= 17.2) {\n      wgt_space.innerHTML = \"0\";\n      extra_space.innerHTML = \"0\";\n      extraw_space.innerHTML = \"0\";\n      totalw_space.innerHTML = \"0\";\n      total_space.innerHTML = \"0\";\n      min_space.innerHTML = \"0\";\n      max_space.innerHTML = \"0\";\n      rem_space.innerHTML = \"<span style='color:red;font-weight:bold;'>Not Possible</span>\";\n      combo_space.innerHTML = \"0\";\n      ;\n    }\n    if (thick_val <= 10) {\n      if (thick_val >= 8) {\n        if (realwidthvalue != 2500 && (length_val != 6000 || length_val != 9000 || length_val != 12000)) {\n          wgt_space.innerHTML = \"0\";\n          extra_space.innerHTML = \"0\";\n          extraw_space.innerHTML = \"0\";\n          totalw_space.innerHTML = \"0\";\n          total_space.innerHTML = \"0\";\n          min_space.innerHTML = \"0\";\n          max_space.innerHTML = \"0\";\n          rem_space.innerHTML = \"<span style='color:red;font-weight:bold;'>Not Possible</span>\";\n          combo_space.innerHTML = \"0\";\n        }\n      } else if (thick_val < 8) {\n        wgt_space.innerHTML = \"0\";\n        extra_space.innerHTML = \"0\";\n        extraw_space.innerHTML = \"0\";\n        totalw_space.innerHTML = \"0\";\n        total_space.innerHTML = \"0\";\n        min_space.innerHTML = \"0\";\n        max_space.innerHTML = \"0\";\n        rem_space.innerHTML = \"<span style='color:red;font-weight:bold;'>Not Possible</span>\";\n        combo_space.innerHTML = \"0\";\n      }\n    }\n    if (realwidthvalue < 1250 || realwidthvalue > 4400) {\n      wgt_space.innerHTML = \"0\";\n      extra_space.innerHTML = \"0\";\n      extraw_space.innerHTML = \"0\";\n      totalw_space.innerHTML = \"0\";\n      total_space.innerHTML = \"0\";\n      min_space.innerHTML = \"0\";\n      max_space.innerHTML = \"0\";\n      rem_space.innerHTML = \"<span style='color:red;font-weight:bold;'>Not Possible</span>\";\n      combo_space.innerHTML = \"0\";\n    }\n    if (length_val < 6000 || length_val > 18000) {\n      wgt_space.innerHTML = \"0\";\n      extra_space.innerHTML = \"0\";\n      extraw_space.innerHTML = \"0\";\n      totalw_space.innerHTML = \"0\";\n      total_space.innerHTML = \"0\";\n      min_space.innerHTML = \"0\";\n      max_space.innerHTML = \"0\";\n      rem_space.innerHTML = \"<span style='color:red;font-weight:bold;'>Not Possible</span>\";\n      combo_space.innerHTML = \"0\";\n    }\n    i++;\n  }\n}\nfunction erase() {\n  window.location.reload();\n}\nfunction exportTableToExcel(tableID) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var downloadLink;\n  var dataType = 'application/vnd.ms-excel';\n  var tableSelect = document.getElementById(tableID);\n  var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');\n  filename = filename ? filename + '.xls' : 'excel_data.xls';\n  downloadLink = document.createElement(\"a\");\n  document.body.appendChild(downloadLink);\n  if (navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([\"\\uFEFF\", tableHTML], {\n      type: dataType\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    downloadLink.href = 'data:' + dataType + ', ' + tableHTML;\n    downloadLink.download = filename;\n    downloadLink.click();\n  }\n}\n\n//# sourceURL=webpack://final_combo/./script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./script.js"]();
/******/ 	
/******/ })()
;